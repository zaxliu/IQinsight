%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Validate HDL Realization of VQSQ Module
%   This script validate the HDL realization of VQSQ module by comparing
%   the recovered results from matlat code and HDL code.
%   The input data is generated by main.m, comprising the original and
%   recovered versions of a user-specified field and OFDM symbol.
%   The scrip outputs the mean and max error magnitude between original and
%   recovered versions.
% Version:
%   YDB 12.4 Initial version
%   LJC 12.4 Run verilog code section
%   YDB 12.5
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
close all;clear all;clc
fprintf('Loading matlab data...');
if(exist('versions.mat','file')==0)
    disp('\n versions data is empty,please try again')
else
    load versions.mat                    % Load intermidiate data generated by main.m
    [sx,sy] = size(versions);
    if(sx>800)
        sx=800;
    end
    if(sy>8)
        sy =8;
    end
    versions = versions(1:sx,1:sy);
    versions_rec = versions_rec(1:sx,1:sy);
    fileDir = '..\Verilog\VQ_SQ_Verilog\';  % Relative directory of Verilog Code
    fprintf('done.\n');
    %% Generate Input File for Verilog Code
    fprintf('Generating verilog input file...');
    VerilogDataInit(versions,fileDir);
    fprintf('done.\n');
    %% Run Verilog Code in ISE
    disp('The script is paused because you need to run verilog code in ISE ');
    disp('Please come back after running verilog code and press any key to continue.');
    pause;
    %% Get Verilog Recovered Data;
    fprintf('Reading Verilog output file...');
    data_Rec = readVerilogData(fileDir,sx,sy);
    fprintf('done.\n');
    %% Error Calculation
    err = versions_rec-data_Rec;        % Get error between matlab and HDL results
    err = err(:);                       % Serialize matrix into array
    errAbs = sqrt(err.*conj(err));      % Get error magnitude
    versions_rec1 = versions_rec(:);
    versions_recAbs = sqrt(versions_rec1.*conj(versions_rec1));
    
    m2 = norm(errAbs)/norm(versions_recAbs);
   
    m = mean(errAbs);
    M = max(errAbs);
    disp(['Mean error magnitude is:' num2str(m)]);
    disp(['Max  error magnitude is:' num2str(M)]);
    disp(['relative error magnitude is:    ' num2str(m2)])
end
